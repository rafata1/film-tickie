basePath: /
definitions:
  auth.CheckOTPRequest:
    properties:
      otp:
        type: string
      phone:
        type: string
    type: object
  auth.UpdateUserInfoRequest:
    properties:
      name:
        type: string
    type: object
  schedule.CancelSeatsRequest:
    properties:
      schedule_id:
        type: integer
    type: object
  schedule.ConfirmSeatsRequest:
    properties:
      schedule_id:
        type: integer
    type: object
  schedule.HoldSeatsRequest:
    properties:
      schedule_id:
        type: integer
      seats:
        items:
          type: integer
        type: array
    type: object
info:
  contact: {}
  title: User API documentation
paths:
  /api/v1/auth/check_otp:
    post:
      consumes:
      - application/json
      parameters:
      - description: CheckOTP
        in: body
        name: checkOTPRequest
        required: true
        schema:
          $ref: '#/definitions/auth.CheckOTPRequest'
      produces:
      - application/json
      responses:
        "200":
          description: ""
      summary: Check otp with phone number, return jwt token
      tags:
      - Auth service
  /api/v1/cinema/{id}:
    get:
      consumes:
      - application/json
      parameters:
      - description: cinema id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: ""
      summary: GetCinemaById
      tags:
      - Cinema service
  /api/v1/cinemas:
    get:
      consumes:
      - application/json
      parameters:
      - description: film id
        in: query
        name: filmId
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: ""
      summary: ListCinemas
      tags:
      - Cinema service
  /api/v1/film/{id}:
    get:
      consumes:
      - application/json
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: ""
      summary: GetFilmById
      tags:
      - Film service
  /api/v1/films:
    get:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: ""
      summary: ListAllFilms
      tags:
      - Film service
  /api/v1/films/{category}:
    get:
      consumes:
      - application/json
      parameters:
      - description: action
        in: path
        name: category
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: ""
      summary: ListFilmsByCategory
      tags:
      - Film service
  /api/v1/schedules:
    get:
      consumes:
      - application/json
      parameters:
      - description: cinemaId
        in: query
        name: cinemaId
        type: integer
      - description: filmId
        in: query
        name: filmId
        type: integer
      - description: 'filter by date, ex: 2018-01-20'
        in: query
        name: onDate
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: ""
      summary: ListSchedules
      tags:
      - Schedule service
  /api/v1/ticket/:
    get:
      consumes:
      - application/json
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: schedule id
        in: query
        name: scheduleId
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: ""
      summary: get seats status of schedule
      tags:
      - Ticket service
  /api/v1/ticket/cancel:
    post:
      consumes:
      - application/json
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: cancel seats
        in: body
        name: CancelSeatsRequest
        required: true
        schema:
          $ref: '#/definitions/schedule.CancelSeatsRequest'
      produces:
      - application/json
      responses:
        "200":
          description: ""
      summary: user cancel payment then call this api
      tags:
      - Ticket service
  /api/v1/ticket/confirm:
    post:
      consumes:
      - application/json
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: confirm after payment
        in: body
        name: ConfirmSeatsRequest
        required: true
        schema:
          $ref: '#/definitions/schedule.ConfirmSeatsRequest'
      produces:
      - application/json
      responses:
        "200":
          description: ""
      summary: confirm seats after payment
      tags:
      - Ticket service
  /api/v1/ticket/hold:
    post:
      consumes:
      - application/json
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: hold seats
        in: body
        name: HoldSeatsRequest
        required: true
        schema:
          $ref: '#/definitions/schedule.HoldSeatsRequest'
      produces:
      - application/json
      responses:
        "200":
          description: ""
      summary: hold seats for 10 minutes before payment
      tags:
      - Ticket service
  /api/v1/user:
    post:
      consumes:
      - application/json
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: update user info request
        in: body
        name: UpdateUserInfoRequest
        required: true
        schema:
          $ref: '#/definitions/auth.UpdateUserInfoRequest'
      produces:
      - application/json
      responses:
        "200":
          description: ""
      summary: update user info
      tags:
      - Profile service
swagger: "2.0"
